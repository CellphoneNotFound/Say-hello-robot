#include "audio.h"
#include <SoftwareSerial.h>

#include <Adafruit_NeoPixel.h>

#include <Servo.h>
#define val_max 4
#define val_min 1
#define INTERVAL_Time 10

#define humanHotSensor 4//PIR传感器D4
#define buttonPin 12
#define PIN1 6//彩灯
#define PIN2 2
#define SERVOPIN SDA//舵机

Adafruit_NeoPixel strip1 = Adafruit_NeoPixel(2, PIN1, NEO_GRB + NEO_KHZ800);
Adafruit_NeoPixel strip2 = Adafruit_NeoPixel(2, PIN2, NEO_GRB + NEO_KHZ800);
Servo myservo;
bool isUP = true;

//unsigned long lcd_time = millis(); //刷新时间计时器
int val = 0;
int music_vol = 26; //初始音量0~30
bool humanHotState = false;
boolean on_off;
boolean statusChange;
bool playing = false;

int pos = 0;
int soundNum = 1;

unsigned long Time_millis = millis();

#include <IRremote.h>
#include <U8glib.h>
#define INTERVAL_LCD             20             //定义OLED刷新时间间隔  
int RECV_PIN = 10;
IRrecv irrecv(RECV_PIN);
decode_results results;
unsigned long lcd_time = millis();                 //OLED刷新时间计时器
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE);     //设置OLED型号  
//-------字体设置，大、中、小
#define setFont_L u8g.setFont(u8g_font_7x13)
#define setFont_M u8g.setFont(u8g_font_fixed_v0r)
#define setFont_S u8g.setFont(u8g_font_fixed_v0r)
#define setFont_SS u8g.setFont(u8g_font_fub25n)
void setup() {
  Serial.begin(9600);
  pinMode(buttonPin, INPUT);
  pinMode(humanHotSensor, INPUT);
  audio_init(DEVICE_Flash,4,music_vol);    //初始化mp3模块
  //audio_init(DEVICE_TF, MODE_loopOne, music_vol);

  strip1.begin();
  strip2.begin();
  strip1.show(); // Initialize all pixels to 'off'
  strip2.show();
  myservo.attach(SERVOPIN);

  Serial.begin(9600);
    irrecv.enableIRIn(); // 启动红外解码
    Serial.println("Initialisation complete.");
   

}

void loop() {
  humanHotState = digitalRead(humanHotSensor);
  // print out the state of the button:
  //Serial.println(humanHotState);
  //delay(1);        // delay in between reads for stability

  if (humanHotState) {
    colorWipe(strip1.Color(255, 182, 193));
     colorWipe(strip2.Color(255, 182, 193));
    updateServo();

    if (!playing) {
      Serial.println("play sound.....");
      audio_play();
     audio_choose(1);
      audio_choose(2);
      playing = true;
       u8g.firstPage();
 do {
 setFont_L;
 u8g.setPrintPos(0, 10);
 u8g.print("hhhhh");
 u8g.setPrintPos(55, 10);
 u8g.print("hello");
 u8g.setPrintPos(85, 10);
 u8g.print("girl");
 u8g.setPrintPos(0, 30);
 u8g.print("welcome");
 u8g.setPrintPos(55,30);
 u8g.print("I am");
 u8g.setPrintPos(85,30);
 u8g.print("haha");
 }while( u8g.nextPage() );
    }
  }
  else
  {
    playing = false;
    audio_pause();
    Serial.println("stop sound.....");
    colorWipe(strip1.Color(0, 0, 0));
     colorWipe(strip2.Color(0, 0, 0));
    myservo.write(90);
  }


}

void updateServo() {
  if (Time_millis > millis()) Time_millis = millis();
  if (millis() - Time_millis > INTERVAL_Time) {

    if (pos == 30) {
      isUP = true;
    } else if (pos == 130) {
      isUP = false;
    }

    if (isUP) {
      pos++;
    } else {
      pos--;
    }
    //Serial.println(pos);
    myservo.write(pos);
    Time_millis = millis();
  }
}
             // Fill the dots one after the other with a color
void colorWipe(uint32_t c) {
  for (uint16_t i = 0; i < strip1.numPixels(); i++) {
    strip1.setPixelColor(i, c);
    strip1.show();
    //delay(wait);
  }
   for (uint16_t i = 0; i < strip2.numPixels(); i++) {
    strip2.setPixelColor(i, c);
    strip2.show();
    //delay(wait);
  }
}
